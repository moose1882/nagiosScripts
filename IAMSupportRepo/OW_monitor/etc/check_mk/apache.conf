# Apache configuration file for Check_MK
#
# This version has been adapted for OMD. The authentication
# has been removed to a separate file which is shared with
# other web applications.

# This shares the check_mk agents delivered with the OMD
# version via HTTP
Alias /ow_monitor/check_mk/agents /omd/sites/ow_monitor/share/check_mk/agents
<Directory /omd/sites/ow_monitor/share/check_mk/agents>
  Options +Indexes
  Order deny,allow
  allow from all
</Directory>

<IfModule mod_python.c>
  # Handle locally installed files via the internal URI /ow_monitor/check_mk/local
  # These are files stored below local/share/check_mk/web/htdocs
  Alias /ow_monitor/check_mk/local /omd/sites/ow_monitor/local/share/check_mk/web/htdocs
  <Directory /omd/sites/ow_monitor/local/share/check_mk/web/htdocs>
        Order deny,allow
        allow from all
  </Directory>

  Alias /ow_monitor/check_mk /omd/sites/ow_monitor/share/check_mk/web/htdocs
  <Directory /omd/sites/ow_monitor/share/check_mk/web/htdocs>
        AddHandler mod_python .py
        PythonHandler index
        PythonOption mod_python.importer.path "['/omd/sites/ow_monitor/local/share/check_mk/web/htdocs', '/omd/sites/ow_monitor/share/check_mk/web/htdocs']"
        PythonInterpreter ow_monitor
        DirectoryIndex index.py

        Order deny,allow
        allow from all

        # Rewrite rules for handling the local-hierarchy. All URI to static
        # files are redirected, if those exist in local/. Thus the user
        # even can override shipped static files. URIs ending in .py must
        # be skipped. Those are no files. They are handled by Multisite itself.
        RewriteEngine on
        RewriteCond "$1" "!.*\.py$"
        RewriteCond "/omd/sites/ow_monitor/local/share/check_mk/web/htdocs/$1" "-f"
        RewriteRule "(.*)" "/ow_monitor/check_mk/local/$1"

        ErrorDocument 403 "<h1>Authentication Problem</h1>Either you've entered an invalid password or the authentication<br>configuration of your check_mk web pages is incorrect.<br>"
  </Directory>

  # Allow access to sounds without authentication. This avoid a problem
  # with totem plugin in Firefox on Linux (and maybe others as well)
  <Location "/ow_monitor/check_mk/sounds">
      Order allow,deny
      Allow from all
      Satisfy any
  </Location>

  # Access to automation.py is done without HTTP Authentication.
  <Location "/ow_monitor/check_mk/automation.py">
      Order allow,deny
      Allow from all
      Satisfy any
  </Location>


</IfModule>

<IfModule !mod_python.c>
  Alias /ow_monitor/check_mk /omd/sites/ow_monitor/share/check_mk/web/htdocs
  <Directory /omd/sites/ow_monitor/share/check_mk/web/htdocs>
        Deny from all
        ErrorDocument 403 "<h1>Check_mk: Incomplete Apache2 Installation</h1>You need mod_python in order to run the web interface of check_mk.<br> Please install mod_python and restart Apache."
  </Directory>
</IfModule>
